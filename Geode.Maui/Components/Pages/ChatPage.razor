@page "/chats/{ChatId:int}"
@inject IMessagesService messagesService
@inject IChatHubService hubService

<MudLink Href="@($"call/{ChatId}")" class="btn btn-primary">Join call</MudLink>

<div class="d-flex gap-2 mt-3">
    <div>
        <InputText @bind-Value="@messageInput" class="form-control w-100"></InputText>
    </div>
    <div>
        <MudButton OnClick="SendMessage" class="btn btn-primary w-100">Send message</MudButton>
    </div>
</div>

@foreach (ChatMessageDto message in messages)
{
    <div class="chat ml-2 p-3">@message.Sender : @message.Content</div>
}

@code {
    [Parameter]
    public int ChatId { get; set; }

    private List<ChatMessageDto> messages { get; set; } = new List<ChatMessageDto>();
    private string? messageInput;

    protected override async Task OnInitializedAsync()
    {
        messages = (await messagesService.GetAllChatMessages(ChatId)).ToList();
        await hubService.ConnectToChatHubAsync(ChatId);
        hubService.OnMessageReceived += ProcessNewMessage;
    }

    private async Task SendMessage()
    {
        if (messageInput != null)
        {
            await hubService.SendMessageAsync(ChatId, messageInput);
        }
    }

    private void ProcessNewMessage(ChatMessageDto newMessage)
    {
        InvokeAsync(() =>
        {
            messages.Insert(0, newMessage);
            StateHasChanged();
        });
    }
}
