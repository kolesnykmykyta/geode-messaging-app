@page "/profile"
@inject IUsersService usersService

<div class="container">
    <div class="row">
        <div class="col-lg-6 col-md-12">
            <div class="profile-picture-container text-center">
                <img src="@profileData.ProfilePictureUrl" class="img-fluid rounded-circle profile-picture" />
            </div>
        </div>
        <div class="col-lg-6 col-md-12">
            <div class="justify-content-center">
                <h4>Profile info</h4>
                <div>
                    <EditForm Model="@profileData" OnSubmit="ChangeProfileDataAsync" FormName="profileData" class="form-group" style="margin:auto">
                        <div class="mt-2">
                            <label for="username">Username</label>
                            <InputText id="username" @bind-Value="@profileData.UserName" class="form-control" required></InputText>
                        </div>
                        <div class="mt-2">
                            <label for="phone">Phone number</label>
                            <InputText id="phone" @bind-Value="@profileData.PhoneNumber" class="form-control" required></InputText>
                        </div>
                        <p>@InfoMessage</p>
                        <div class="d-flex">
                            <button type="submit" class="btn btn-primary mt-1">Update profile info</button>
                        </div>
                    </EditForm>
                </div>
            </div>
            <div class="justify-content-center mt-4">
                <h4>Profile picture</h4>
                <div>
                    <div>
                        <InputFile accept=".jpg,.png,.jpeg" OnChange="HandlePictureChange" class="form-control">Profile picture</InputFile>
                    </div>
                    <div>
                        <p>@PictureMessage</p>
                    </div>
                    <div class="d-flex">
                        <button @onclick="UpdateProfilePicture" class="btn btn-primary mt-1">Update profile picture</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private UserProfileDto profileData { get; set; } = new();

    private string? InfoMessage { get; set; }
    private string? PictureMessage { get; set; }

    private IBrowserFile? profilePicture { get; set; }

    protected override async Task OnInitializedAsync()
    {
        await UpdateProfileInfo();
    }

    private async Task ChangeProfileDataAsync(EditContext context)
    {
        InfoMessage = "Updating your profile...";
        UserProfileDto contextDto = (UserProfileDto)context.Model;
        bool result = await usersService.UpdateUserProfileAsync(contextDto);
        InfoMessage = result ? "Successfully updated!" : "Profile update has failed.";
    }

    private void HandlePictureChange(InputFileChangeEventArgs args)
    {
        profilePicture = args.File;
    }

    private async Task UpdateProfilePicture()
    {
        if (profilePicture != null)
        {
            PictureMessage = "Changing your profile picture...";

            ResponseBodyDto result = await usersService.UpdateProfilePictureAsync(profilePicture);
            if (result.IsSuccess){
                await UpdateProfileInfo();
                StateHasChanged();
                PictureMessage = "Successfully changed!";
            }
            else{
                PictureMessage = result.Error;
            }
        }
    }

    private async Task UpdateProfileInfo()
    {
        profileData = await usersService.GetUserProfileAsync() ?? new();
        profileData.ProfilePictureUrl += $"?v{DateTime.Now.Ticks}";
    }
}
