@page "/profile"
@inject IUsersService usersService

<h3>Your profile</h3>

<div>
    <h4>Profile info</h4>
    <div class="justify-content-center">
        <EditForm Model="@profileData" OnSubmit="ChangeProfileDataAsync" FormName="profileData" class="form-group w-50" style="margin:auto">
            <div class="mt-2">
                <label for="username">Username</label>
                <InputText id="username" @bind-Value="@profileData.UserName" class="form-control" required></InputText>
            </div>
            <div class="mt-2">
                <label for="phone">Phone number</label>
                <InputText id="phone" @bind-Value="@profileData.PhoneNumber" class="form-control" required></InputText>
            </div>
            <div class="d-flex flex-row-reverse">
                <button type="submit" class="btn btn-primary mt-4">Submit</button>
            </div>
        </EditForm>
        <p>@InfoMessage</p>
    </div>
</div>
<div>
    <h4>Profile picture</h4>
    <div>
        <InputFile accept=".jpg,.png,.jpeg" OnChange="HandlePictureChange">Profile picture</InputFile>
        <button @onclick="UpdateProfilePicture" class="btn btn-primary mt-4">Update</button>
        <p>@ProfileMessage</p>
    </div>
</div>
@code {
    private UserProfileDto profileData { get; set; } = new();

    private string? InfoMessage { get; set; }
    private string? ProfileMessage { get; set; }

    private IBrowserFile? profilePicture { get; set; }

    protected override async Task OnInitializedAsync()
    {
        profileData = await usersService.GetUserProfileAsync() ?? new();
    }

    private async Task ChangeProfileDataAsync(EditContext context)
    {
        InfoMessage = "Updating your profile...";
        UserProfileDto contextDto = (UserProfileDto)context.Model;
        bool result = await usersService.UpdateUserProfileAsync(contextDto);
        InfoMessage = result ? "Successfully updated!" : "Profile update has failed.";
    }

    private void HandlePictureChange(InputFileChangeEventArgs args)
    {
        profilePicture = args.File;
    }

    private async Task UpdateProfilePicture()
    {
        if (profilePicture != null)
        {
            ProfileMessage = "Changing your profile picture...";
            ResponseBodyDto result = await usersService.UpdateProfilePictureAsync(profilePicture);
            ProfileMessage = result.IsSuccess ? "Successfully changed!" : result.Error;
        }
    }
}
